USE northwind;

-- 4. Obtener una lista con los datos de las empleadas y empleados de la empresa Northwind. 
-- En tabla de empleadas identificar first_name, last_name, id_employee

SELECT employee_id, first_name, last_name
FROM employees;


-- 5. Nuestra primera tarea consiste en identificar aquellos productos (tabla products) cuyos precios por unidad oscilen entre 0 y 5 d칩lares.

SELECT *
FROM products
WHERE unit_price BETWEEN 0 AND 5;

-- 6.Seleccionar aquellos productos que no tengan precio, porque lo hayan dejado vacio al introducir los datos (NULL).
SELECT product_id, product_name, unit_price
FROM products
WHERE unit_price IS NULL;

SELECT product_id, product_name, unit_price
FROM products;

-- 7. Obt칠n los datos de aquellos productos con un precio menor a 15 d칩lares, pero s칩lo aquellos que tienen un ID menor que 20.

SELECT product_id, product_name, unit_price
FROM products
WHERE unit_price < 15 AND product_id < 20;

-- 8. Invertir el uso de los operadores del ejercicio anterior;  aquellos que tengan un precio superior a 15 d칩lares y un ID superior a 20.
SELECT product_id, product_name, unit_price
FROM products
WHERE NOT unit_price < 15 AND NOT product_id < 20;

-- 9. Conocer los datos de los pa칤ses que hacen pedidos (orders) para focalizar el negocio en esas regiones y al mismo tiempo crear campa침as 
-- de marketing para conseguir mejorar en las otras regiones. 

SELECT ship_country, ship_region
FROM orders;

-- 10. Crea una consulta que muestre los primeros 10 productos seg칰n su ID y que nos indique el nombre de dichos productos y sus precios.
SELECT product_id, product_name, unit_price
FROM products
LIMIT 10;

-- 11. Ahora realiza la misma consulta pero que nos muestre los 칰ltimos 10 productos seg칰n su ID de manera descendiente.
SELECT product_id, product_name, unit_price
FROM products
ORDER BY product_id DESC
LIMIT 10;

-- 12. Nos interesa conocer los distintos pedidos que hemos tenido (mostrar los valores 칰nicos de ID en la tabla order_details).
SELECT DISTINCT product_id, order_id
FROM order_details;

-- 13.Conocer los 3 pedidos que han supuesto un mayor ingreso para la empresa. Crea una columna en esta consulta con el alias ImporteTotal.
-- Nota: Utiliza unit_price y quantity para calcular el importe total.

-- Crear columna
-- Debemos o no adicionar la columna?
ALTER TABLE order_details
ADD COLUMN importe_total FLOAT;

ALTER TABLE order_details
DROP COLUMN importe_total;


SELECT order_id, SUM(unit_price * quantity) AS ImporteTotal 
FROM order_details 
GROUP BY order_id 
ORDER BY ImporteTotal DESC LIMIT 3;

-- GROUP BY agrupa filas con valores comunes y se usa para realizar c치lculos dentro de esos grupos.
-- ORDER BY organiza los resultados en un orden espec칤fico que t칰 defines.

-- OPCION 2/ mejor opci칩n para guardar la informaci칩n
ALTER TABLE order_details
ADD COLUMN importe_total FLOAT;
UPDATE order_details
SET importe_total = unit_price * quantity;

SELECT order_id, unit_price, quantity, importe_total AS  ImporteTotal 
FROM order_details;



-- 14. Los pedidos que est치n entre las posiciones 5 y 10 de nuestro ranking: Nos piden seleccionar el ID de los pedidos situados entre la 5 y la 10 mejor posici칩n en cuanto al coste econ칩mico total ImporteTotal.
SELECT order_id , SUM(unit_price * quantity) AS ImporteTotal 
FROM order_details 
GROUP BY order_id 
ORDER BY  ImporteTotal DESC
LIMIT 10
OFFSET 5;

-- 15. Solicita una lista de las categor칤as que componen los tipos de pedido de la empresa. 
-- Queremos que la lista de resultado sea renombrada como "NombreDeCategoria".
SELECT category_name AS NombreDeCategoria
FROM categories;

-- 16.  Selecciona envios con retraso: Nos hacen llegar desde la direcci칩n la preocupaci칩n acerca del cumplimiento de las fechas de env칤o. 칔ltimamente se est치n dando retrasos en muchas entregas y por ello se busca realizar la acci칩n preventiva de enviar los paquetes con varios d칤as adicionales de antelacion. Para comenzar a planear esos env칤os anticipados, nos piden conocer cu치l ser칤a la fecha de env칤o (ShippedDate) de los pedidos almacenados en la base de datos, si estos sufrieran un retraso de 5 d칤as. Nos piden mostrar la nueva fecha renombrada como FechaRetrasada.
-- 游눠 Pista 游눠 Para realizar lo anterior, busca documentaci칩n de la funci칩n DATE_ADD para MySQL.


-- 17. Selecciona los productos m치s rentables: Gracias a un an치lisis realizado en los 칰ltimos meses en la empresa, se ha comprobado que el rango de productos que puede dar m치s beneficios parece ser el de aquellos con un precio mayor o igual a 15 d칩lares, pero menor o igual que 50 d칩lares. Selecciona los datos de ese rango de productos usando el operador BETWEEN

-- 18. Selecciona los productos con unos precios dados: Queremos conocer los datos de los productos que tengan exactamente un precio de 18, 19 o 20 d칩lares (un rango muy concreto de precios del que la empresa quiere maximizar sus ventas en un futuro). Usa IN para conseguirlo de manera eficiente.